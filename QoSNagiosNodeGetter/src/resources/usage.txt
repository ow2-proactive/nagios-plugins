
SYNOPSIS
   java -jar nodegetprobe.jar <url> <user> <pass> [OPTIONS]

DESCRIPTION

Nagios plugin to probe the responsiveness of a ProActive based scheduler grid.
It uses a simple job probe submission to test a grid concerning its responsiveness, and status in general.  
The output of the probe job is compared with a local copy of the correct output to make sure it is correctly executed. The output of the probe job (once executed the test) is written in a file whose path is exactly the same as the path of the job descriptor + '.out.tmp'. The correct output of the job should be put in a file whose path is exactly the same as the path of the job descriptor + '.out'. 
   
Mandatory arguments to long options are mandatory for short options too.
   
   -v, --debug
      Verbose debugging mode. If true it will try to load 'log4j.properties' to know what and where to put the log messages.
       
   -u, --user=USER
      Username to be used to get connected to the Scheduler.
      
   -p, --pass=PASS
      Password to be used to get connected to the Scheduler.
      
   --url=URL
      URL to be used to get connected to the Scheduler. Can be 'pamr://1' if already specified the Scheduler in the ProActive configuration file.
      It should have a format like 'rmi://shainese.inria.fr:1099/' for JAVAPA and 'http://localhost:8080/SchedulingRest-1.0.0/rest/scheduler' for REST.
           
   -r, --nodes=AMOUNT_OF_NODES_TO_ASK_FOR
      Amount of nodes that will be requested to the Resource Manager.

   --nodeswarning=NODESWARNING
      If the amount of nodes obtained is strictly smaller than NODESWARNING, then a warning message will be told to Nagios.

   --nodescritical=NODESCRITICAL
      If the amount of nodes obtained is strictly smaller than NODESCRITICAL, then a critical message will be told to Nagios.

   -t, --timeout=TIMEOUT
      Timeout (in seconds) to wait for the test until killing it and telling a critical status to Nagios.
       
   -n, --timeoutwarning=TIMEOUT_FOR_WARNING_MESSAGE
      In seconds. If the overall test exceeded this value, then the plugin will tell to Nagios a warning status.  
      
   -f, --paconf=PACONF
      ProActive configuration file (usually ProActiveConfiguration.xml).
      
   -H, --hostname=HOSTNAME
      Nagios compatibility. Hostname to be tested. Ignored because this information is given in the ProActive configuration file.
      
   -w, --warning=WARNING
      Nagios compatibility. Warning level to be used.
      
   -c, --critical=CRITICAL
      Nagios compatibility. Critical level to be used.
      

NAGIOS OUTPUT INTERPRETATION

   SERVICE STATUS: <status> | key1=<TIME>s key2=<TIME>s ... keyn=<TIME>s
	
   where
      - status is a message regarding to the result of the test.
      - TIME is the time (in seconds) that was spent for the activity described by key* for the probe. 
	
EXECUTION EXAMPLE

   Case for a local Scheduler/RM running
      java -jar nodegetprobe.jar --url=rmi://shainese.inria.fr:1099/ --user=demo --pass=demo --timeout=10
      java -jar nodegetprobe.jar --url=rmi://shainese.inria.fr:1099/ -u demo     -p demo     -t 10
       

